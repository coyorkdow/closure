name: Linux

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  linux_cpp14:
    build:
      # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
      # You can convert this to a matrix build if you need cross-platform coverage.
      # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Configure CMake
        run: mkdir build && cd build && cmake -DCMAKE_CXX_STANDARD=14 -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Werror" ..

      - name: Build
        run: cd build && make

      - name: Test
        run: cd build && ./closure_test
  linux_cpp17:
    build:
      # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
      # You can convert this to a matrix build if you need cross-platform coverage.
      # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3
          with:
            submodules: recursive

        - name: Configure CMake
          run: mkdir build && cd build && cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Werror" ..

        - name: Build
          run: cd build && make

        - name: Test
          run: cd build && ./closure_test
